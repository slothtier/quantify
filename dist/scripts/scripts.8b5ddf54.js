"use strict";angular.module("quantifyApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngRoute","quantifyApp.controllers","quantifyApp.services"]).run(["$rootScope","$location",function($rootScope,$location){$location.$$hash.search(/([A-Za-z0-9_-]{155})/gi)>-1&&($rootScope.location=$location.$$hash,$location.path("/main"),$location.url($location.path()))}]).config(["$routeProvider","$locationProvider",function($routeProvider,$locationProvider){$routeProvider.when("/main",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/auth",{templateUrl:"views/auth.html",controller:"AuthCtrl"}).otherwise({redirectTo:"/auth"}),$locationProvider.html5Mode(!0)}]),angular.module("quantifyApp.controllers",[]).controller("QuantifyCtrl",["$scope",function(){}]).controller("AuthCtrl",["$scope",function($scope){$scope.authenticate=function(){var accountUrl="https://accounts.spotify.com/authorize",clientID="client_id=2877dc4791af41e0b53de799f8cf2472",redirectUri="redirect_uri=https%3A%2F%2Fslothtier.github.io%2Fquantify%2Findex.html",authScope="scope=playlist-read-private",responseType="response_type=token",state="state=123";window.location.href=accountUrl+"?"+clientID+"&"+redirectUri+"&"+authScope+"&"+responseType+"&"+state}}]).controller("MainCtrl",function($scope,$http,$rootScope,parseUrl){$scope.invalidUrl="enter a valid spotify playlist url or uri.",$scope.quantify=function(){if(void 0===parseUrl.parse($scope.model.url).user)$scope.invalidUrl=parseUrl.parse($scope.model.url),$scope.model.url="",$scope.showPlaylist=!1;else{$scope.invalidUrl="",$scope.errorMessage="";var userID=parseUrl.parse($scope.model.url).user,playlistID=parseUrl.parse($scope.model.url).playlist,apiUrl="https://api.spotify.com/v1/users/"+userID+"/playlists/"+playlistID,authString="Bearer "+$rootScope.location.match(/([A-Za-z0-9_-]{155})/gi)[0];$http({method:"GET",url:apiUrl,headers:{Authorization:authString}}).success(function(data){function msToTime(dur){var seconds=parseInt(dur/1e3%60),minutes=parseInt(dur/6e4%60),hours=parseInt(dur/36e5%24);return hours=10>hours?"0"+hours:hours,minutes=10>minutes?"0"+minutes:minutes,seconds=10>seconds?"0"+seconds:seconds,hours+" hr "+minutes+" min "+seconds+" sec"}var completeResponse=data,trackResponse=completeResponse.tracks;$scope.playlistName=completeResponse.name,$scope.playlistTrackcount=trackResponse.total,$scope.playlistItems=trackResponse.items,$scope.tracks=[],$scope.tracklist=[],angular.forEach(trackResponse.items,function(item){$scope.tracks.push(item)});for(var i=0;i<Object.keys($scope.tracks).length;i++)$scope.tracklist.push($scope.tracks[i].track);for(var durationMs=0,j=0;j<Object.keys($scope.tracks).length;j++)durationMs+=$scope.tracklist[j].duration_ms;$scope.playlistDuration=msToTime(durationMs),$scope.durationMin=durationMs/1e3/60,$scope.sizeNormalQuality=Math.ceil(60*$scope.durationMin*12/1e3),$scope.sizeHighQuality=Math.ceil(60*$scope.durationMin*20/1e3),$scope.sizeExtremeQuality=Math.ceil(60*$scope.durationMin*40/1e3),$scope.sizeNormalQualityReal=Math.ceil(60*$scope.durationMin*11.5/1e3),$scope.sizeHighQualityReal=Math.ceil(60*$scope.durationMin*19.2/1e3),$scope.sizeExtremeQualityReal=Math.ceil(60*$scope.durationMin*35.1/1e3),$scope.showPlaylist=!0}).error(function(data){switch(data.error.status){case 401:$scope.errorMessage="your access token has expired, please re-authenticate.";break;case 404:$scope.errorMessage="playlist data could not be found.";break;case 429:$scope.errorMessage="too many requests (rate limited)";break;case 503:$scope.errorMessage="Spotify appears to experience some problems currently.";break;default:$scope.errorMessage="uh oh.. something went horribly wrong."}$scope.showPlaylist=!1})}}}),angular.module("quantifyApp.services",[]).factory("parseUrl",function(){var doParse=function(url){if(url.search("http://open.spotify.com/user/")>-1&&url.search(/[\w]{22}/gi)>-1&&url.search("/playlist/")>-1){url=url.replace("http://open.spotify.com/user/","");var urlHelper=url.split("/"),id={user:urlHelper[0],playlist:urlHelper[2]};return id}if(url.search("spotify:user:")>-1&&url.search(/[\w]{22}$/gi)>-1&&url.search(":playlist:")>-1){url=url.replace("spotify:user:","");var urlHelper=url.split(":"),id={user:urlHelper[0],playlist:urlHelper[2]};return id}return"enter a valid spotify playlist url or uri."};return{parse:function(url){return doParse(url)}}}).factory("playlistData",["$http",function($http){var getPlaylistData=function(apiUrl,authString){$http({method:"GET",url:apiUrl,headers:{Authorization:authString}}).success(function(data){var completeResponse=data,trackResponse=completeResponse.tracks,tracks=(trackResponse.items,[]),tracklist=[];angular.forEach(trackResponse.items,function(item){tracks.push(item)});for(var i=0;i<Object.keys(tracks).length;i++)tracklist.push(tracks[i].track);for(var durationMs=0,j=0;j<Object.keys(tracks).length;j++)durationMs+=tracklist[j].duration_ms;return console.log("name: "+completeResponse.name+" count: "+trackResponse.total+" duration: "+durationMs),{name:completeResponse.name,trackCount:trackResponse.total,durationMs:durationMs}}).error(function(data){var errorMessage="";switch(data.error.status){case 401:errorMessage="your access token has expired, please re-authenticate.";break;case 404:errorMessage="playlist data could not be found.";break;case 429:errorMessage="too many requests (rate limited)";break;case 503:errorMessage="Spotify appears to experience some problems currently.";break;default:errorMessage="uh oh.. something went horribly wrong."}})};return{getData:function(apiUrl,authString){return getPlaylistData(apiUrl,authString)}}}]);